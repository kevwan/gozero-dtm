// Code generated by goctl. DO NOT EDIT!
// Source: trans.proto

package transsvc

import (
	"context"

	"github.com/kevwan/gozero-dtm/trans/pb"

	"github.com/tal-tech/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AdjustInfo = pb.AdjustInfo
	Response   = pb.Response

	TransSvc interface {
		TransIn(ctx context.Context, in *AdjustInfo, opts ...grpc.CallOption) (*Response, error)
		TransOut(ctx context.Context, in *AdjustInfo, opts ...grpc.CallOption) (*Response, error)
	}

	defaultTransSvc struct {
		cli zrpc.Client
	}
)

func NewTransSvc(cli zrpc.Client) TransSvc {
	return &defaultTransSvc{
		cli: cli,
	}
}

func (m *defaultTransSvc) TransIn(ctx context.Context, in *AdjustInfo, opts ...grpc.CallOption) (*Response, error) {
	client := pb.NewTransSvcClient(m.cli.Conn())
	return client.TransIn(ctx, in, opts...)
}

func (m *defaultTransSvc) TransOut(ctx context.Context, in *AdjustInfo, opts ...grpc.CallOption) (*Response, error) {
	client := pb.NewTransSvcClient(m.cli.Conn())
	return client.TransOut(ctx, in, opts...)
}
